name: "[CD:Production:Web] Build and Release"
on:
  push:
      tags:
          - "v*.*.*"

permissions:
  contents: write
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  changelog-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Tag/Release search
        run: echo "GHA_V_COUNTER=$(grep ${{ github.ref_name }} CHANGELOG.md | wc -l)" >> "$GITHUB_ENV"
        shell: bash
      - name: Tag Output
        run: echo "env.GHA_V_COUNTER = ${{ env.GHA_V_COUNTER }}"
        shell: bash
      - name: "If changelog isn't updated, delete the release and tag"
        uses: dev-drprasad/delete-tag-and-release@v1.0
        if: env.GHA_V_COUNTER == '0'
        with:
          tag_name: ${{ github.ref_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          delete_release: true
      - name: Find '${{ github.ref_name }}' in CHANGELOG.md
        if: env.GHA_V_COUNTER == '0'
        uses: actions/github-script@v2.1.0
        with:
          script: |
              core.setFailed('CHANGELOG.md not updated to include new release notes for ${{ github.ref_name }}!')
  version-check:
    runs-on: ubuntu-latest
    outputs:
      version-code: ${{ steps.version-code-gen.outputs.GHA_VERSION_CODE }}
    steps:
        - uses: actions/checkout@v4
        - name: Set up new test tag
          run: |
            TAGNAME=${{ github.ref_name }}
            NEW_NAME="${TAGNAME//v/}"
            echo GHA_NEW_TAG_NAME=$NEW_NAME >> "$GITHUB_ENV"
        - name: Tag/Release search
          run: echo "GHA_V_COUNTER=$(grep '${{ format('"version"{0}', ':') }} "${{ env.GHA_NEW_TAG_NAME }}"' webapp/package.json | wc -l)" >> "$GITHUB_ENV"
          shell: bash
        - name: Tag Output
          run: |
            echo "env.GHA_V_COUNTER = ${{ env.GHA_V_COUNTER }}"
            echo "env.GHA_NEW_TAG_NAME = ${{ env.GHA_NEW_TAG_NAME }}"
          shell: bash
        - name: "If pubspec isn't updated, delete the release and tag"
          uses: dev-drprasad/delete-tag-and-release@v1.0
          if: env.GHA_V_COUNTER == '0'
          with:
            tag_name: ${{ github.ref_name }}
            github_token: ${{ secrets.GITHUB_TOKEN }}
            delete_release: true
        - name: Find '${{ github.ref_name }}' in package.json
          if: env.GHA_V_COUNTER == '0'
          uses: actions/github-script@v2.1.0
          with:
            script: |
                core.setFailed('pubspec.yaml not updated to new version ${{ env.GHA_NEW_TAG_NAME }}!')

  build-and-release-web:
    runs-on: ubuntu-latest
    needs: [version-check, changelog-check, unit-tests]
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    - name: Build Web App
      working-directory: ./webapp
      run: bun install && bun build ./src/index.ts --outdir ./built
    - name: Release Web App 
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: ${{ secrets.GITHUB_TOKEN }}
        firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PSP_PORTFOLIO_F1205 }}
        channelId: live
        projectId: psp-portfolio-f1205

  github-release:
    runs-on: ubuntu-latest
    needs: build-and-release-web
    steps:
      - uses: actions/checkout@v4
      - name: Update GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          append_body: true
          generate_release_notes: true
          body_path: ${{ github.workspace }}/CHANGELOG.md
